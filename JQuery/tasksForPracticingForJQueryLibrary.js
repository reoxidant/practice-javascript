// Задачи для решения
// 1. Все абзацы <p>, внутри которых есть <b>, оберните в тег <div>.

// $('p:has(b)').wrap('<div>');

// 2.Найдите все абзацы <p> с классом .www, поставьте им в начало текст '!', затем добавьте к этим абзацам еще и заголовки h1-h6 и покрасьте эти абзацы и заголовки в красный цвет.

// $('p .www').prepend('!').add(':header').css('color', 'red');

// 3. Найдите все абзацы <p>, и замените их на тег <div> с таким же содержимым.

/*
$('p').replaceWith(function(){
    return '<div> '+$(this).text()+'</div>';
});*/

// 4. Найдите все чекбоксы на странице и заблокируйте четные из найденных.

// $(':checkbox').prop('disabled', true);

// 5. Поставьте всем незаблокированным чекбоксам статус "отмечен".

// $(':checkbox:not([disabled])').prop('checked', true);

// 6. Дан элемент #test. Поставьте его непосредственному соседу сверху текст '!', а соседу снизу - текст '?'. Решите задачу одной цепочкой.

// $('#test').prev().html('!').end().next().html('?');

// 7. Дан элемент #test. Поставьте его непосредственным соседям сверху и снизу текст элемента #test.
/*
var $text = $('#test').html();
$('#test').prev().html(text).end().next().html(text)*/

// 8. Дан элемент #test. Найдите среди его соседей сверху ближайший абзац и поставьте ему текст элемента #test.
/*
var $text = $('#test').html();
$('#test').prevAll('p').first().html(text);*/

// 9.Найдите второй <li> на странице, добавьте ему класс .www, оберните его внутри тегом <i>, вставьте после него <li> с текстом 'привет'.

// $('li:eq(2)').addClass('www').innerWrap('<i>').after('<li>привет</li>');

// 10. Найдите десятый <li> на странице, найдите его родителя, получите непосредственного соседа родителя сверху, оберните его в <div class="www">.

// $('li:eq(9)').parent().prev().wrap('<div class="www">');

// 11. Каждому абзацу <p>, кроме абзацев с классом .www, добавьте к конец его порядковый номер.

/*
$('p').not('.www').append(function(index){
    return index;
});*/

// 12. Найдите все абзацы <p> и поставьте перед каждым абзацем его копию. Копию покрасьте в красный цвет, а исходный абзац в зеленый.

/*var $copy = $('p');

$('p').each(function(){
    var $elem = $(this);
    $elem.clone().css('color','red').insertBefore($elem);
    $elem.css('color','green');
}
);*/

/*13. Найдите абзацы <p>, которые стоят непосредственно под <h2> и переместите каждый абзац так, чтобы он стал непосредственно над <h2>.*/

/*
$(':header').nextAll('p').each(function(){
    var $elem = $(this);
    $($elem).prev().before($elem);
});*/

// 14. Найдите все пустые абзацы <p> (без текста) и вставьте в них текст непосредственного соседа сверху.

/*
$('p:empty').each(function(){
    var $elem = $(this);
    var $text = $($elem).prev().html();
    $elem.html($text);
});*/

// 15.Родителю тега <b>, если это элемент с классом .www или абзац <p>, поставьте красный цвет и размер текста в 30px.

/*
$('b').parent('.www, p').each(function(){
    $(this).css({color: 'red', fontSize: '30px'});
});*/

// 16.Всем пустым абзацам <p> поставьте текст ближайшего к ним сверху тега <h2>.

/*
$('p:empty').each(function(){
    var $text = $(this).prevAll('h2').first().html();
    $(this).html($text);
});*/

// 17. Даны инпуты с числами. Сделайте так, чтобы в инпутах стали квадраты этих чисел.

/*
$('input').each(function(){
    var $value = $(this).attr('value');
    var $result = $value * $value;
    $(this).attr('value',$result);
});*/

// 18. Дан элемент #test. Поставьте ему в начало текст непосредственного соседа сверху, а в конец - текст непосредственного соседа снизу.

/*
$('#test').each(function(){
    var $firstText = $(this).prev().html();
    var $secondText = $(this).next().html();
    $(this).prepend($firstText).append($secondText);
});*/

// 19. Дан элемент #test. Найдите его второго соседа сверху и его второго соседа снизу. Сделайте так, чтобы найденные элементы обменялись текстом (сосед сверху возьмет текст соседа снизу и наоборот).

/*var $id = $('#test');
var $next = $id.nextAll().eq(1);
var $prev = $id.prevAll().eq(1);
var nextText = $next.html();
var prevText = $prev.html();
$next.html(prevText);
$prev.html(nextText);*/

// 20. Дан элемент <div>. Выберите из него всех непосредственных потомков, которые не являются заголовками и покрасьте их в красный цвет.

// $('div').children().not('h2').css('color', 'red');

//21.  Найдите все абзацы <p>, покрасьте их в красный цвет. Затем выберите среди найденных абзацев абзацы с классом .www и поставьте им текст '!'.

// $('p').css('color','red').filter('.www').text('!');

// 22.Найдите все абзацы <p> с классом .www, покрасьте их в красный цвет.
//     Затем выберите среди найденных абзацев первый и поставьте ему текст '!', затем выберите последний и ему поставьте текст '?'.
//     Решите задачу одной цепочкой.

// $('p').css('color','red').first().text('!').end().last().text('?');

// 23.Найдите все абзацы <p>, поставьте каждому из них в конец тот же текст, который стоит внутри него (то есть текст в абзаце станет написан два раза).

/*$('p').each(function(){
   var text_element = $(this).text();
   $(this).append(text_element);
});*/

// 24.  Найдите все абзацы <p>, поставьте каждому из них в конец его порядковый номер в наборе.

/*$('p').each(function(){
   var number_element = $(this).index();
   $(this).append(number_element);
});*/

// 25. Даны абзацы с числами. Поставьте каждому из них в конец число, которое в нем хранится, умноженное на его порядковый номер в наборе.

/*
$('p').each(function(){
   var number_element = $(this).index();
   var text_element = $(this).text();
   $(this).append(number_element*text_element);
});*/

// 26.  По нажатию на абзац <p> удалите его непосредственных соседей сверху и с низу.

/*$('p').on('click',function(){
   $(this).prevAll().remove().end().nextAll().remove();
});*/

/*27. По нажатию на абзац <p> удалите всех его соседей сверху до первого заголовка h1-h6 (то есть элементы,
    стоящие выше этого заголовка и сам заголовок удалять не надо).*/

/*$('p').on('click', function(){
   $(this).prevAll('p').remove();
});*/

// 28. По нажатию на абзац <p> удалите его ближайшего нижнего соседа с классом .www.

/*$('p').on('click', function(){
    $(this).nextAll('.www').remove();
});*/

// 29. По нажатию на абзац <p> удалите его пятого соседа снизу.

/*$('p').on('click', function(){
    $(this).nextAll().eq(4).remove();
})*/

// 30. По нажатию на абзац <p> удалите его пятого соседа снизу, если это не <h2>.

/*$('p').on('click', function(){
   $(this).nextAll().eq(4).not('h2').remove();
});*/

// 31. По нажатию на абзац <p> удалите его пятого соседа снизу, если этот сосед не имеет внутри себя тега <b>.

/*$('p').on('click', function(){
   $(this).nextAll().eq(4).not(':has(b)').remove();
});*/

// 32. По нажатию на абзац <p> удалите его пятого соседа снизу, если этот сосед не стоит непосредственно после <h2>.

/*$('p').on('click', function(){
   $(this).nextAll().eq(4).not('h2').remove();
});*/

// 33. Дан элемент #test. Поменяйте этот элемент местами с его непосредственным соседом снизу.

/*var elem = $('#test');
elem.insertAfter(elem.next());*/

// 34. Дан элемент #test. После его непосредственного соседа снизу вставьте копию нашего элемента.

/*var elem = $('#test').clone();
$('#test').next().after(elem);*/

// 35. Дан элемент #test. Поменяйте этот элемент местами с его ближайшим соседом снизу с классом .www.

/*var elem = $('#test');
var www = $('#test').nextAll('.www');
elem.clone().insertAfter(www);
www.insertAfter(elem);
elem.remove();*/

// 36.Найдите все абзацы <p>, которые внутри одного родителя лежат между одним и другим <h2>.

// $('h2').first().nextUntil('h2').css('color','red');

// 37. Оберните каждый абзац <p> снаружи и внутри в <div>.

// $('p').wrap('<div>').wrapInner('<div>');

// 38. Найдите все абзацы <p>, у которых непосредственный родитель не <div> и оберните каждый из них в <div class="www">.

// $('p').parent().not('div').children('p').wrap('<div class="www">');

/*39.  Найдите все абзацы <p>. Удалите их родителя (сделайте ему unwrap),
если этот родитель не <div> с классом .www. Затем для те абзацы,
    у которых был удален родитель, оберните в <div> с классом .zzz.*/

// $(':not(div.www) > p').css('color','red').unwrap().wrap('<div class="zzz">');

// 40.  Найдите всех родителей элемента #test и создайте массив из CSS классов этих родителей.

/*
var arr = [];
$('#test').parents().each(function(){
   var class_name_elem = $(this).attr('class');
   if(class_name_elem){
       arr = arr.concat(class_name_elem);
   }
});

console.log(arr);*/

/*41. Найдите все абзацы <p>, у которых есть атрибут class,
и каждый из них оберните в <div> с теми же классами, как у найденного абзаца,
а классы каждого абзаца удалите вместе с атрибутом class.*/

/*$('p').each(function(){
   var class_name = $(this).attr('class');
   $(this).wrap('<div>').parent().addClass(class_name);
   $(this).removeClass();
   $(this).removeAttr('class');
});*/

/*42. Найдите все абзацы <p> из #test, поставьте им в конец текст '!',
затем исключите из найденных абзацы с классом .www и оставшимся поставьте красный цвет. */

/*$('#test p').append('!').each(function(){
   $(this).not('.www').css('color','red');
});*/

// 43. Найдите все <li> на странице, затем перед предпоследним из найденных вставьте еще один <li> с текстом 'пункт'.

// $('li').last().prev().css('color','red').before('<li>пункт</li>');

// 44. Найдите все <li> на странице, затем выберите среди найденных второй, третий и четвертый с конца и поставьте им текст '!'.

// $('li').slice(1,4).html('!');

// 45. Найдите <ol> с #test и переставьте все <li> в нем в обратном порядке.
/*var ol = $('#test');
ol.html(ol.children().get().reverse());*/

/*46. Дан элемент #text.Найдите всех его соседей сверху и всех его соседей снизу и поменяйте их местами
(то есть все, что стоит до элемента, должно стать после него и наоборот).*/

/*var prev = $('#test').prevAll().get().reverse();
var next = $('#test').nextAll();
$('#test').after(prev).before(next);*/

/*47. Получите все <li> с классом .www, сделайте им красный цвет, затем найдите среди найденных те <li>,
    у которых есть класс .bbb и удалите их.Решите все одной цепочкой.*/

// $('li.www').css('color','red').filter('.bbb').remove();

// 48.Получите все <li> на странице. Четные из полученных сделайте пустыми, а нечетные удалите.

// $('li').empty(':even').remove(':odd')

// 49. Найдите все теги <div> и удвойте им высоту.

/*var height = $('div').height()*2;
$('div').height(height);*/

// 50. Найдите сумму высот всех <div> на странице.
/*
var height = 0;
$('div').each(function(){
   height += $(this).height();
});
console.log(height);*/

// 51. Для элемента #test найдите ближайшего родителя с классом .www, в конец этого родителя добавьте абзац с текстом '!'.

/*
$('#test').parentsUntil('.www').append('!');*/

// 52. По нажатию на элемент #test найдите его ближайшего родителя с классом .www,
// внутри этого родителя найдите все абзацы и покрасьте их в красный цвет.

/*$('#test').on('click',function(){
   $(this).closest('.www').find('p').css('color','red');
});*/

// 53. Покрасьте первые 10 <li> на странице в красный цвет.

/*for (var i = 0; i < 10; i++){
    $('li').eq(i).css('color','red');
}*/

// 54. Покрасьте с 5-той по 10-ю <li> на странице в красный цвет.

// $('li').slice(4,10).css('color','red');

// 55. Найдите последние 10 <li> на странице, покрасьте их в красный цвет.
// Затем из найденных найдите четные <li> и оберните их внутри в тег <b>.

// $('li').slice(-10).css('color','red').filter(':even').wrapInner('b');

// 56. На странице даны чекбоксы. Подсчитайте, сколько из них отмечены.
/*var hh = $('input[type=checkbox]:checked').length;
console.log(hh);*/

// 57.Дано 5 чекбоксов. Сделайте так, чтобы после того, как пользователь отметил два из них, все чекбоксы заблокировались.

/*
$('input[type=checkbox]').on('click',function(e){
   $(this).prop('checked', true);
   var len = $('input[type=checkbox]:checked').length;
   if(len >= 2){
       $('input[type=checkbox]').prop('checked',true);
   }
});*/

// 58. Сделайте так, чтобы все отмеченные чекбоксы сменили свое состояние на неотмеченное и наоборот.

/*$(':checkbox').on('click',function(){
    if($(this).prop('checked') == false){
        $(':checkbox').prop('checked','');
    }
    if($(this).prop('checked') == true){
        $(':checkbox').attr('checked','checked');
    }
});*/
/*
$(':checkbox').each(function() {
    var elem = $(this);
    elem.prop('checked', !elem.prop('checked'));
});*/

// 59. Дан инпуты. Переместите содержимое атрибута value в атрибут placeholder, а сам атрибут value удалите совсем.

/*var val = $('input').attr('value');
$('input').attr('placeholder',val);
$('input').removeAttr('value');*/

// 60.  Дана ссылка. Если атрибут href начинается на http://, добавьте ссылке атрибут target="_blank".
// $("a[href^='http://']").attr('target','_blank');

/*61. Дан инпут, в который можно ввести число. Сделайте так, чтобы при вводе числа в этот инпут и
потери фокуса на странице искался чекбокс с таким номером и становился отмеченным,
    а остальные чекбоксы становились неотмеченными.*/

/*$('input').on('focusout',function(){
    var number = $(this).val();
    var yy = [];
    yy = $('input[type=checkbox]').get();
    for(var i = 0; i < 9; i++){
        if(yy[i].value == number){
            yy[i].checked = true;
        }else{
            yy[i].checked = false;
        }
    }
});*/

/*62. Дан селект и радио кнопочки, количество радио равно количеству пунктов в селекте.
    Сделайте так, чтобы при выборе пункта в селекте автоматически становилась отмеченной соответствующая радио кнопочка
(соответствие по номеру следования: первый пункт списка - первому радио и так далее).*/

/*
$('select').on('change',function(){
    var number = $(this).val();
    var radio = $('input[type=radio]').get();
    for(var i = 0; i < 5; i++){
        if(radio[i].value == number){
            radio[i].checked = true;
        }else{
            radio[i].checked = false;
        }
    }
});*/
