// События через отдельные методы
// 1. Даны абзацы. Сделайте так, чтобы по клику на каждый абзац на экран выводилось его содержимое.

/*
$('p').click(function(){
    $(this).html();
});*/

// 2. Привяжите всем ссылкам событие - по наведению на ссылку в конец ее текста дописывается ее href в круглых скобках.

/*$('a').mouseover(function(){
    $(this).append('('+$(this).attr('href')+')');
});*/
// 3.Дополнить предыдущую задачу: после первого наведению на ссылку следует отвязать от нее событие, которое добавляет href в конец текста.

/*$('a').mouseover(function func(){
    $(this).append('('+$(this).attr('href')+')');
    $(this).off('mouseover', func);
});*/

// 4.Привяжите всем инпутам событие - по потери фокуса каждый инпут выводит свое value в абзац с id="test".

/*
$('input').focusout(function func(){
    $('#test').append($(this).attr('value'));
});*/

// 5.Для всех инпутов сделайте так, чтобы они выводили свой value алертом при нажатии на любой из них, но только по первому нажатию. Повторное нажатие на инпут не должно вызывать реакции.

/*
$('input').click(function func(){
    alert($(this).attr('value'));
    $(this).unbind('click', func);
});*/

// 6.Даны абзацы с числами. По нажатию на абзац в нем должен появится квадрат числа, которое он содержит.

/*
$('p').click(function func(){
    var count = $(this).text() * $(this).text();
    $(this).html(count);
});*/

// 7. Даны абзацы с числами. По клику на абзац в нем должен появится квадрат числа, которое он содержит, но только по первому клику. По двойному клику на абзац число в абзаце должно удвоится, но тоже только первый раз.

/*
$('p').click(function func(){
    var count = $(this).text() * $(this).text();
    $(this).html(count);
    $(this).unbind('click', func);
});*/

// Задачи на on и off

// 8. Привяжите всем ссылкам событие - по наведению на ссылку в конец ее текста дописывается ее href в круглых скобках.

/*$('a').on('mouseover', function(){
    $(this).append('('+$(this).attr('href')+')');
});*/

// 9. Дополнить предыдущую задачу: после первого наведению на ссылку следует отвязать от нее событие, которое добавляет href в конец текста.

/*$('a').on('mouseover', function func(){
    $(this).append('('+$(this).attr('href')+')');
    $(this).off('mouseover', func);
});*/

// Задачи на one

// 10. Даны абзацы. Сделайте так, чтобы по первому клику на абзац ему в конец добавлялся '!', но только по первому клику.

/*
$('p').on('click', function func(){
    $(this).append('!');
    $(this).off('click', func);
});*/

// Задачи на делегирование через on

// 11.  Дан ul, в нем несколько li. Под ul сделайте кнопку, по нажатию на которую в конец ul будет добавляться новый li с текстом 'пункт'. Сделайте так, чтобы при клике на каждый li, ему в конец добавлялся '!'. Это должно работать и для вновь добавленных li. Задачу решите с помощью делегирования (то есть событие должно быть навешано на ul).
/*

$('button').on('click', function () {
    $('ul').append(
        $('<li>').append('Пункт'));
});

$('ul').on('click', 'li', function(){
    $(this).append('!');
});*/


/*12.Дана таблица с юзерами с двумя колонками: имя и фамилия. Под таблицей сделайте форму, с помощью которой можно будет добавить нового юзера в таблицу. Сделайте так, чтобы при клике на любую ячейку появлялся prompt, с помощью которого можно изменить текст ячейки. Задачу решите с помощью делегирования (то есть событие должно быть навешано на table).*/

/*
$("button").on('click', function(){
    $('tbody').append(
        $('<tr>').append(
            $('<td>').append($('[name="name"]').val()),
            $('<td>').append($('[name="surname"]').val())
        )
    )
});

$('table').on('click', 'td', function(){
    var edit = prompt($(this).text());
    $(this).html(edit);
});
*/





